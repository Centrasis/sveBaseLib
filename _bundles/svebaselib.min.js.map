{"version":3,"sources":["webpack://SveBaseLib/webpack/universalModuleDefinition","webpack://SveBaseLib/webpack/bootstrap","webpack://SveBaseLib/./src/SVESystemInfo.ts","webpack://SveBaseLib/./src/SVEAccount.ts","webpack://SveBaseLib/./src/SVEProject.ts","webpack://SveBaseLib/./src/SVEGroup.ts","webpack://SveBaseLib/./src/SVEData.ts","webpack://SveBaseLib/./node_modules/path-browserify/index.js","webpack://SveBaseLib/./src/index.ts","webpack://SveBaseLib/./node_modules/process/browser.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","systemState","authorizationSystem","basicSystem","tokenSystem","SQLCredentials","MySQL_DB","MySQL_Password","MySQL_User","this","sources","sveService","undefined","persistentDatabase","volatileDatabase","SVESystemInfo","isServer","getIsServer","getInstance","instance","initSystem","Promise","resolve","reject","getSystemStatus","getFullSystemState","getAPIRoot","TokenType","LoginState","isLoginInfo","info","isTokenInfo","isSessionUserInitializer","user","onLogin","loginState","NotLoggedIn","id","NaN","sessionID","init","doTokenLogin","token","ressource","type","DeviceToken","time","Date","then","val","doLogin","getByID","err","getID","getName","setSessionID","getLoginState","initObj","state","createTokenFor","getState","SVEAccount","SVEProjectType","isProjectInitializer","idx","handler","onReady","Vacation","group","owner","getType","getOwner","getGroup","getData","SVEProject","getProjects","getUsers","getRightsForUser","getGroupsOf","SVEGroup","SVEDataType","SVEDataVersion","mimeMap","Map","set","initInfo","onComplete","Image","lastAccess","creation","data","path","localDataInfo","parentProject","getMimeTypeMap","initFromResult","result","filePath","thumbnailPath","thumbnail","SVEData","getTypeFrom","user_id","str","Video","PDF","CSV","getOwnerID","getCreationDate","getLastAccessDate","getCacheType","getContentType","extname","currentDataVersion","Full","slice","toLowerCase","basename","getProject","store","getURI","getBLOB","version","getStream","self","on","normalizeArray","parts","allowAboveRoot","up","length","last","splice","unshift","filter","xs","f","res","push","resolvedPath","resolvedAbsolute","arguments","process","cwd","TypeError","charAt","split","join","normalize","isAbsolute","trailingSlash","substr","paths","Array","index","relative","from","to","trim","arr","start","end","fromParts","toParts","Math","min","samePartsLength","outputParts","concat","sep","delimiter","dirname","code","charCodeAt","hasRoot","matchedSlash","ext","startDot","startPart","preDotState","len","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","array","noop","nextTick","args","apply","title","browser","env","argv","versions","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","chdir","dir","umask"],"mappings":"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","file":"svebaselib.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"SveBaseLib\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SveBaseLib\"] = factory();\n\telse\n\t\troot[\"SveBaseLib\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","import { SessionUserInitializer, SVEAccount } from \"./SVEAccount\";\r\n\r\nexport interface SVESources {\r\n    sveService?: string;\r\n    persistentDatabase?: string | any;\r\n    volatileDatabase?: string | any;\r\n    sveDataPath?: string;\r\n}\r\n\r\nexport interface SQLInfo {\r\n    MySQL_User: string;\r\n    MySQL_Password: string;\r\n    MySQL_DB: string;\r\n}\r\n\r\nexport interface SVESystemState {\r\n    basicSystem: boolean;\r\n    tokenSystem: boolean;\r\n    authorizationSystem: boolean;\r\n}\r\n\r\nexport interface SVEFullSystemState extends SVESystemState {\r\n    user?: SVEAccount\r\n}\r\n\r\nclass SVESystemInfo {\r\n    protected static instance: SVESystemInfo;\r\n    protected systemState: SVESystemState = {\r\n        authorizationSystem: false,\r\n        basicSystem: false,\r\n        tokenSystem: false\r\n    };\r\n    protected static isServer: boolean;\r\n\r\n    protected constructor() { \r\n        this.sources = {\r\n            sveService: undefined,\r\n            persistentDatabase: undefined,\r\n            volatileDatabase: undefined\r\n        };\r\n        SVESystemInfo.isServer = false;\r\n    }\r\n\r\n    public static getIsServer(): boolean {\r\n        return SVESystemInfo.isServer;\r\n    }\r\n\r\n    public static getInstance(): SVESystemInfo {\r\n        if (!SVESystemInfo.instance) {\r\n            SVESystemInfo.instance = new SVESystemInfo();\r\n        }\r\n\r\n        return SVESystemInfo.instance;\r\n    }\r\n\r\n    public static initSystem(): Promise<boolean> {\r\n        return new Promise<boolean>((resolve, reject) => {\r\n            this.instance.systemState = {\r\n                authorizationSystem: false,\r\n                basicSystem: false,\r\n                tokenSystem: false\r\n            };\r\n\r\n            if(this.getInstance().sources.sveService !== undefined) {\r\n                async () => {\r\n                    const response = await fetch(this.getInstance().sources.sveService + '/check',\r\n                    {\r\n                        method: \"GET\"\r\n                    });\r\n\r\n                    if (response.status < 400) {\r\n                        response.json().then(val => {\r\n                            this.instance.systemState = val.status as SVESystemState;\r\n                            resolve(true);\r\n                        }, err => reject(false));\r\n                    } else {\r\n                        reject(false);\r\n                    }\r\n                };\r\n            } else {\r\n                reject(false);\r\n            }\r\n        });\r\n    }\r\n\r\n    public sources: SVESources;\r\n    public SQLCredentials: SQLInfo = {\r\n        MySQL_DB: \"\",\r\n        MySQL_Password: \"\",\r\n        MySQL_User: \"\"\r\n    };\r\n\r\n    public static getSystemStatus(): SVESystemState {\r\n        return this.getInstance().systemState;\r\n    }\r\n\r\n    public static getFullSystemState(): Promise<SVEFullSystemState> {\r\n        return new Promise<SVEFullSystemState>((resolve, reject) => {\r\n            async () => {\r\n                const response = await fetch(SVESystemInfo.getAPIRoot() + \"/check\", {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json' \r\n                    }\r\n                });\r\n                if (response.status < 400) {\r\n                    response.json().then(val => {\r\n                        if (!(\"loggedInAs\" in val)) {\r\n                            resolve({\r\n                                authorizationSystem: val.status.authorizationSystem as boolean,\r\n                                basicSystem: val.status.basicSystem as boolean,\r\n                                tokenSystem: val.status.tokenSystem as boolean\r\n                            });\r\n                        } else {\r\n                            let loggedInAs = new SVEAccount(val.loggedInAs as SessionUserInitializer, (s) => {\r\n                                resolve({\r\n                                    authorizationSystem: val.status.authorizationSystem as boolean,\r\n                                    basicSystem: val.status.basicSystem as boolean,\r\n                                    tokenSystem: val.status.tokenSystem as boolean,\r\n                                    user: loggedInAs\r\n                                });\r\n                            });\r\n                        }\r\n                    }, err => reject({}));\r\n                } else {\r\n                    reject({});\r\n                }\r\n            };\r\n        });\r\n    }\r\n\r\n    public static getAPIRoot(): string {\r\n        return (SVESystemInfo.getInstance().sources.sveService !== undefined) ? SVESystemInfo.getInstance().sources.sveService! : \"\";\r\n    }\r\n}\r\n\r\nexport {\r\n    SVESystemInfo\r\n}","import {SVESystemInfo} from './SVESystemInfo';\r\n\r\n/*const user = sql.define<\"user\", { id: number; name: string; password: string }>({\r\n    name: 'user',\r\n    columns: { \r\n        id: {dataType: \"number\"}, \r\n        name: {dataType: \"string\"}, \r\n        password: {dataType: \"string\"}\r\n    },\r\n    schema: \"snowvision_db\"\r\n});*/\r\n\r\nexport enum TokenType {\r\n    RessourceToken = 1,\r\n    DeviceToken\r\n};\r\n\r\nexport interface BasicUserInitializer {\r\n    name: string;\r\n    id: number;\r\n}\r\n\r\nenum LoginState {\r\n    NotLoggedIn = 1,\r\n    LoggedInByUser,\r\n    LoggedInByToken\r\n};\r\n\r\nexport interface SessionUserInitializer extends BasicUserInitializer {\r\n    sessionID: string;\r\n    loginState: LoginState;\r\n}\r\n\r\nexport interface BasicUserLoginInfo {\r\n    name: string,\r\n    pass: string\r\n}\r\n\r\nexport interface TokenUserLoginInfo {\r\n    name: string,\r\n    token: string\r\n}\r\n\r\nexport interface Token {\r\n    user: String,\r\n    token: String,\r\n    type: TokenType,\r\n    time: Date,\r\n    ressource: String\r\n}\r\n\r\nexport function isLoginInfo(info: SessionUserInitializer | BasicUserLoginInfo | BasicUserInitializer | TokenUserLoginInfo): boolean {\r\n    return \"name\" in info && \"pass\" in info;\r\n}\r\n\r\nexport function isTokenInfo(info: SessionUserInitializer | BasicUserLoginInfo | BasicUserInitializer | TokenUserLoginInfo): boolean {\r\n    return \"name\" in info && \"token\" in info && !isLoginInfo(info);\r\n}\r\n\r\nexport function isSessionUserInitializer(info: SessionUserInitializer | BasicUserLoginInfo | BasicUserInitializer | TokenUserLoginInfo): boolean {\r\n    return \"sessionID\" in info && \"loginState\" in info;\r\n}\r\n\r\nexport function isBasicUserInitializer(info: SessionUserInitializer | BasicUserLoginInfo | BasicUserInitializer | TokenUserLoginInfo): boolean {\r\n    return \"id\" in info && !isLoginInfo(info) && !isSessionUserInitializer(info);\r\n}\r\n\r\nexport class SVEAccount {\r\n    protected loginState: LoginState = LoginState.NotLoggedIn;\r\n    protected name: string = \"\";\r\n    protected id: number = NaN;\r\n    protected sessionID: string = \"\";\r\n\r\n    public getID(): number {\r\n        return this.id;\r\n    }\r\n\r\n    public getName(): string {\r\n        return this.name;\r\n    }\r\n\r\n    public setSessionID(id: string) {\r\n        this.sessionID = id;\r\n    }\r\n\r\n    public getLoginState(): LoginState {\r\n        return this.loginState;\r\n    }\r\n\r\n    // if onLogin is set a login will be perfomed. Otherwise the class will only be created\r\n    public constructor(user: SessionUserInitializer | BasicUserLoginInfo | BasicUserInitializer | TokenUserLoginInfo, onLogin?: (state: SVEAccount) => void) {\r\n        if(isLoginInfo(user) || isTokenInfo(user)) {\r\n            this.init(null, LoginState.NotLoggedIn);\r\n\r\n            if (isTokenInfo(user)) {\r\n                this.doTokenLogin({\r\n                    user: (user as TokenUserLoginInfo).name,\r\n                    token: (user as TokenUserLoginInfo).token,\r\n                    ressource: \"LogIn\",\r\n                    type: TokenType.DeviceToken,\r\n                    time: new Date()\r\n                }).then((val: LoginState) => {\r\n                    this.loginState = val;\r\n                    if(onLogin !== undefined)\r\n                        onLogin!(this);\r\n                }, (val: LoginState) => {\r\n                    this.loginState = val;\r\n                    if(onLogin !== undefined)\r\n                        onLogin!(this);\r\n                });\r\n            } else {\r\n                this.doLogin(user as BasicUserLoginInfo).then((val: LoginState) => {\r\n                    this.loginState = val;\r\n                    if(onLogin !== undefined)\r\n                        onLogin!(this);\r\n                }, (val: LoginState) => {\r\n                    this.loginState = val;\r\n                    if(onLogin !== undefined)\r\n                        onLogin!(this);\r\n                });\r\n            }\r\n        } else {\r\n            if (isSessionUserInitializer(user)) {\r\n                this.sessionID = (user as SessionUserInitializer).sessionID;\r\n                this.loginState = (user as SessionUserInitializer).loginState;\r\n                this.name = (user as SessionUserInitializer).name;\r\n                this.id = (user as SessionUserInitializer).id;\r\n                if(onLogin !== undefined)\r\n                    onLogin!(this);\r\n            } else {\r\n                this.getByID((user as BasicUserInitializer).id).then(val => {\r\n                    if(onLogin !== undefined)\r\n                        onLogin!(this);\r\n                }, err => {\r\n                    if(onLogin !== undefined)\r\n                        onLogin!(this);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    protected init(initObj: any, state: LoginState) {\r\n        if (initObj !== null) {\r\n            this.name = initObj[\"name\"];\r\n            this.id = initObj[\"id\"];\r\n            this.loginState = state;\r\n        } else {\r\n            this.name = \"\";\r\n            this.id = NaN;\r\n            this.loginState = LoginState.NotLoggedIn;\r\n        }\r\n    }\r\n\r\n    protected getByID(id: number): Promise<boolean> {\r\n        return new Promise<boolean>((resolve, reject) => {\r\n                async () => {\r\n                    const response = await fetch(SVESystemInfo.getInstance().sources.sveService + '/user/' + id, {\r\n                        method: 'GET',\r\n                        headers: {\r\n                            'Accept': 'application/json',\r\n                            'Content-Type': 'application/json' \r\n                        }\r\n                    });\r\n                    if (response.status < 400) {\r\n                        response.json().then((val) => {\r\n                            this.init(val, LoginState.NotLoggedIn);\r\n                            resolve(true);\r\n                        });\r\n                    } else {\r\n                        reject(false);\r\n                    }\r\n                };\r\n        });\r\n    }\r\n\r\n    protected doLogin(info: BasicUserLoginInfo): Promise<LoginState> {\r\n        return new Promise<LoginState>((resolve, reject) => {\r\n            if (SVESystemInfo.getInstance().sources.sveService !== undefined) {\r\n                async () => {\r\n                    const response = await fetch(SVESystemInfo.getInstance().sources.sveService + '/doLogin', {\r\n                        method: 'POST',\r\n                        body: JSON.stringify({\r\n                            name: info.name,\r\n                            pw: info.pass\r\n                        }),\r\n                        headers: {\r\n                            'Accept': 'application/json',\r\n                            'Content-Type': 'application/json' \r\n                        }\r\n                    });\r\n                    if (response.status < 400) {\r\n                        response.json().then((val) => {\r\n                            if(val.success === true) {\r\n                                this.init(val, LoginState.LoggedInByUser);\r\n                            }\r\n                            resolve(this.loginState);\r\n                        });  \r\n                    }\r\n                };\r\n            } else {\r\n                reject(this.loginState);\r\n            }\r\n        });\r\n    }\r\n\r\n    public createTokenFor(ressource: String, user: String): Promise<Token> {\r\n        return new Promise<Token>((resolve, reject) => {\r\n            reject({});\r\n        });\r\n    }\r\n\r\n    protected doTokenLogin(token: Token): Promise<LoginState> {\r\n        return new Promise<LoginState>((resolve, reject) => {\r\n            if (SVESystemInfo.getInstance().sources.sveService !== undefined) {\r\n                async () => {\r\n                    const response = await fetch(SVESystemInfo.getInstance().sources.sveService + '/doLogin', {\r\n                        method: 'POST',\r\n                        body: JSON.stringify({token}),\r\n                        headers: {\r\n                            'Accept': 'application/json',\r\n                            'Content-Type': 'application/json' \r\n                        }\r\n                    });\r\n                    if (response.status < 400) {\r\n                        response.json().then((val) => {\r\n                            if(val.success === true) {\r\n                                this.init(val, LoginState.LoggedInByToken);\r\n                            }\r\n                            resolve(this.loginState);\r\n                        });  \r\n                    }\r\n                };\r\n            } else {\r\n                reject(this.loginState);\r\n            }\r\n        });\r\n    }\r\n\r\n    public getState(): LoginState {\r\n        return this.loginState;\r\n    }\r\n}\r\n\r\nexport {\r\n    LoginState\r\n}","import {BasicUserInitializer, LoginState, SVEAccount} from './SVEAccount';\r\nimport {SVEGroup} from './SVEGroup';\r\nimport {SVESystemInfo} from './SVESystemInfo';\r\nimport { SVEData, SVEDataType } from './SVEData';\r\n\r\nexport enum SVEProjectType {\r\n    Vacation,\r\n    Sales\r\n}\r\n\r\nexport interface ProjectInitializer {\r\n    id: number,\r\n    name: string,\r\n    group: SVEGroup,\r\n    splashImg: string,\r\n    owner: SVEAccount | number,\r\n    state: string,\r\n    resultsURI: string,\r\n    type: SVEProjectType\r\n}\r\n\r\nexport function isProjectInitializer(init: number | ProjectInitializer): boolean {\r\n    return typeof init !== \"number\";\r\n}\r\n\r\nexport class SVEProject {\r\n    protected id: number = NaN;\r\n    protected name: string = \"\";\r\n    protected group?: SVEGroup;\r\n    protected owner?: SVEAccount | number;\r\n    protected handler?: SVEAccount;\r\n    protected type: SVEProjectType = SVEProjectType.Vacation;\r\n\r\n    public getID(): number {\r\n        return this.id;\r\n    }\r\n\r\n    public getName(): string {\r\n        return this.name;\r\n    }\r\n\r\n    public getType(): SVEProjectType {\r\n        return this.type;\r\n    }\r\n\r\n    public getOwner(): Promise<SVEAccount> {\r\n        if (typeof this.owner! === \"number\") {\r\n            return new Promise<SVEAccount>((resolve, reject) => {\r\n                this.owner = new SVEAccount({id: this.owner! as number} as BasicUserInitializer, (s) => { \r\n                    resolve(this.owner! as SVEAccount);\r\n                });\r\n            });\r\n        } else {\r\n            return new Promise<SVEAccount>((resolve, reject) => {\r\n                if (this.owner == undefined) {\r\n                    reject();\r\n                } else {\r\n                    resolve(this.owner! as SVEAccount);\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    public constructor(idx: number | ProjectInitializer, handler: SVEAccount, onReady?: (self: SVEProject) => void) {\r\n        // if get by id\r\n        if (!isProjectInitializer(idx)) {\r\n            if (SVESystemInfo.getIsServer()) {\r\n                if (onReady !== undefined)\r\n                    onReady!(this);\r\n            } else {\r\n                async () => {\r\n                    const response = await fetch(SVESystemInfo.getInstance().sources.sveService + '/project/' + idx, {\r\n                        method: 'GET',\r\n                        headers: {\r\n                            'Accept': 'application/json',\r\n                            'Content-Type': 'application/json' \r\n                        }\r\n                    });\r\n                    if (response.status < 400) {\r\n                        response.json().then((val) => {\r\n                            this.id = val.id;\r\n                            this.name = val.name;\r\n                            this.type = val.type;\r\n                            this.handler = handler;\r\n                            this.owner = new SVEAccount({id: val.owner} as BasicUserInitializer, (s) => {\r\n                                this.group = new SVEGroup(val.group, handler, (self) => {\r\n                                    if (onReady !== undefined)\r\n                                        onReady!(this);\r\n                                });\r\n                            });\r\n                        });\r\n                    } else {\r\n                        if (onReady !== undefined)\r\n                            onReady!(this);\r\n                    }\r\n                };\r\n            }\r\n        } else {\r\n            this.id = (idx as ProjectInitializer).id;\r\n            this.group = (idx as ProjectInitializer).group;\r\n            this.name = (idx as ProjectInitializer).name;\r\n            this.type = (idx as ProjectInitializer).type;\r\n            this.handler = handler;\r\n            this.owner = (idx as ProjectInitializer).owner;\r\n            if (onReady !== undefined)\r\n                onReady!(this);\r\n        }\r\n    }\r\n\r\n    public getGroup(): SVEGroup {\r\n        return this.group!;\r\n    }\r\n\r\n    public getData(): Promise<SVEData[]> {\r\n        return new Promise<SVEData[]>((resolve, reject) => {\r\n            async () => {\r\n                const response = await fetch(SVESystemInfo.getInstance().sources.sveService + '/project/' + this.id + '/data/list',\r\n                {\r\n                    method: \"GET\"\r\n                });\r\n\r\n                if (response.status < 400) {\r\n                    response.json().then(val => {\r\n                        let r: SVEData[] = [];\r\n                        let i = 0;\r\n                        if (val.length > 0) {\r\n                            val.foreach((v: any) => {\r\n                                r.push(new SVEData(this.handler!, {id: v.id as number, parentProject: this, type: v.type as SVEDataType }, (s) => {\r\n                                    i++;\r\n                                    if (i >= val.length) {\r\n                                        resolve(r);\r\n                                    }\r\n                                }));\r\n                            });\r\n                        } else {\r\n                            resolve(r);\r\n                        }\r\n                    }, err => reject(false));\r\n                } else {\r\n                    reject(false);\r\n                }\r\n            };\r\n        });\r\n    }\r\n}","import { visitLexicalEnvironment } from 'typescript';\r\nimport {BasicUserInitializer, SVEAccount} from './SVEAccount';\r\nimport {ProjectInitializer, SVEProject, SVEProjectType} from './SVEProject';\r\nimport {SVESystemInfo} from './SVESystemInfo';\r\n\r\nexport interface UserRights {\r\n    read: boolean;\r\n    write: boolean;\r\n    admin: boolean;\r\n}\r\n\r\nexport class SVEGroup {\r\n    protected handler?: SVEAccount;\r\n    protected id: number = NaN;\r\n    protected name: string = \"\";\r\n\r\n    public getID(): number {\r\n        return this.id;\r\n    }\r\n\r\n    public getName(): string {\r\n        return this.name;\r\n    }\r\n\r\n    public getProjects(): Promise<SVEProject[]> {\r\n        return new Promise<SVEProject[]>((resolve, reject) => {\r\n            let ret: SVEProject[] = [];\r\n            async () => {\r\n                const response = await fetch(SVESystemInfo.getInstance().sources.sveService + '/group/' + this.id, {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json' \r\n                    }\r\n                });\r\n                if (response.status < 400) {\r\n                    response.json().then((val) => {\r\n                        resolve(val.projects as SVEProject[]);\r\n                    });\r\n                } else {\r\n                    reject({\r\n                        success: false,\r\n                        msg: \"HTTP error\"\r\n                    });\r\n                }\r\n            };\r\n        });\r\n    }\r\n\r\n    public getUsers(): Promise<SVEAccount[]> {\r\n        return new Promise<SVEAccount[]>((resolve, reject) => {\r\n            async () => {\r\n                const response = await fetch(SVESystemInfo.getInstance().sources.sveService + '/group/' + this.id + '/users', {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json' \r\n                    }\r\n                });\r\n                if (response.status < 400) {\r\n                    response.json().then((val) => {\r\n                        resolve(val as SVEAccount[]);\r\n                    });\r\n                } else {\r\n                    reject({\r\n                        success: false,\r\n                        msg: \"HTTP error\"\r\n                    });\r\n                }\r\n            };\r\n        });\r\n    }\r\n\r\n    public getRightsForUser(handler: SVEAccount): Promise<UserRights> {\r\n        return new Promise<UserRights>((resolve, reject) => {\r\n            async () => {\r\n                const response = await fetch(SVESystemInfo.getInstance().sources.sveService + '/group/' + this.id + \"/rights\", {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json' \r\n                    }\r\n                });\r\n                if (response.status < 400) {\r\n                    response.json().then((val) => {\r\n                        resolve(val as UserRights);\r\n                    });\r\n                } else {\r\n                    reject({\r\n                        success: false,\r\n                        msg: \"HTTP error\"\r\n                    });\r\n                }\r\n            };\r\n        });\r\n    }\r\n\r\n    public constructor(id: number, handler: SVEAccount, onReady?: (self?: SVEGroup) => void) {\r\n        if (!SVESystemInfo.getIsServer()) {\r\n            async () => {\r\n                const response = await fetch(SVESystemInfo.getInstance().sources.sveService + '/group/' + id, {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json' \r\n                    }\r\n                });\r\n                if (response.status < 400) {\r\n                    response.json().then((val) => {\r\n                        if(val.success === true) {\r\n                            this.id = val.group.id;\r\n                            this.name = val.group.name;\r\n                            this.handler = handler;\r\n                        }\r\n                        if(onReady !== undefined)\r\n                            onReady!(this);\r\n                    });\r\n                } else {\r\n                    if(onReady !== undefined)\r\n                        onReady!(this);\r\n                }\r\n            };\r\n        } else {\r\n            onReady!(this);\r\n        }\r\n    }\r\n\r\n    public static getGroupsOf(handler: SVEAccount): Promise<SVEGroup[]> {\r\n        return new Promise<SVEGroup[]>((resolve, reject) => {\r\n            async () => {\r\n                const response = await fetch(SVESystemInfo.getInstance().sources.sveService + '/groups/', {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json' \r\n                    }\r\n                });\r\n                if (response.status < 400) {\r\n                    response.json().then((val) => {\r\n                        let gs: SVEGroup[] = [];\r\n                        let i = 0;\r\n                        val.forEach((gid: number) => {\r\n                            gs.push(new SVEGroup(gid, handler, (s) => {\r\n                                i++;\r\n                                if (i >= val.length) {\r\n                                    resolve(gs);\r\n                                }\r\n                            }));\r\n                        });\r\n                    }, err => reject(err));\r\n                } else {\r\n                    reject({\r\n                        success: false,\r\n                        msg: \"HTTP error\"\r\n                    });\r\n                }\r\n            };\r\n        });\r\n    }\r\n};","import {BasicUserInitializer, SVEAccount} from './SVEAccount';\r\nimport {SVEProject} from './SVEProject';\r\nimport {SVEGroup} from './SVEGroup';\r\nimport {SVESystemInfo} from './SVESystemInfo';\r\nimport { Stream } from 'stream';\r\n\r\nexport enum SVEDataType {\r\n    Image,\r\n    Video,\r\n    PDF,\r\n    CSV\r\n}\r\n\r\nexport enum SVEDataVersion {\r\n    Full,\r\n    Small,\r\n    Preview\r\n}\r\n\r\nexport interface SVEDataInitializer {\r\n    id?: number,\r\n    data?: ArrayBuffer | Stream, \r\n    path?: SVELocalDataInfo,\r\n    type: SVEDataType,\r\n    parentProject?: SVEProject,\r\n    owner?: SVEAccount | number\r\n}\r\n\r\nexport interface SVELocalDataInfo {\r\n    filePath: string,\r\n    thumbnailPath: string\r\n}\r\n\r\nvar mimeMap: Map<string, string> = new Map();\r\nmimeMap.set(\"html\", 'text/html');\r\nmimeMap.set(\"txt\", 'text/css');\r\nmimeMap.set(\"css\", 'text/html');\r\nmimeMap.set(\"gif\", 'image/gif');\r\nmimeMap.set(\"jpg\", 'image/jpeg');\r\nmimeMap.set(\"png\", 'image/png');\r\nmimeMap.set(\"svg\", 'image/svg+xml');\r\nmimeMap.set(\"js\", 'application/javascript');\r\nmimeMap.set(\"mp4\", 'video/mp4');\r\nmimeMap.set(\"pdf\", 'application/pdf');\r\n\r\nexport class SVEData {\r\n    protected type: SVEDataType = SVEDataType.Image;\r\n    protected id: number = -1;\r\n    protected data?: ArrayBuffer | Stream;\r\n    protected parentProject?: SVEProject;\r\n    protected handler: SVEAccount;\r\n    protected owner?: SVEAccount | number;\r\n    protected localDataInfo?: SVELocalDataInfo;\r\n    protected lastAccess: Date = new Date();\r\n    protected creation: Date = new Date();\r\n    protected currentDataVersion?: SVEDataVersion;\r\n\r\n    public static getMimeTypeMap(): Map<string, string> {\r\n        return mimeMap;\r\n    }\r\n\r\n    public initFromResult(result: any, parentProject: SVEProject | undefined, onComplete: () => void) {\r\n        this.localDataInfo = {\r\n            filePath: result.path,\r\n            thumbnailPath: result.thumbnail\r\n        };\r\n\r\n        this.creation = result.creation;\r\n        this.lastAccess = result.lastAccess;\r\n        this.parentProject = parentProject;\r\n\r\n        this.type = SVEData.getTypeFrom(result.type);\r\n\r\n        this.owner = new SVEAccount({id: result.user_id} as BasicUserInitializer, (s) => {\r\n            onComplete();\r\n        });\r\n    }\r\n\r\n    public static getTypeFrom(str: string): SVEDataType {\r\n        if(str === \"Image\") {\r\n            return SVEDataType.Image;\r\n        }\r\n        if(str === \"Video\") {\r\n            return SVEDataType.Video;\r\n        }\r\n        if(str === \"PDF\") {\r\n            return SVEDataType.PDF;\r\n        }\r\n        if(str === \"CSV\") {\r\n            return SVEDataType.CSV;\r\n        }\r\n        return SVEDataType.Image;\r\n    }\r\n\r\n    // gets the data by index if initInfo is number. Else a new data record is created on server\r\n    public constructor(handler: SVEAccount, initInfo: number | SVEDataInitializer, onComplete: (self: SVEData) => void) {\r\n        this.handler = handler;\r\n\r\n        if (typeof initInfo === \"number\") {\r\n            this.id = initInfo as number;\r\n\r\n            if (typeof SVESystemInfo.getInstance().sources.sveService !== undefined) {\r\n                async () => {\r\n                    const response = await fetch(SVESystemInfo.getInstance().sources.sveService + '/data/' + this.id, {\r\n                        method: 'GET',\r\n                        headers: {\r\n                            'Accept': 'application/json',\r\n                            'Content-Type': 'application/json' \r\n                        }\r\n                    });\r\n                    if (response.status < 400) {\r\n                        response.json().then((val) => {\r\n                            this.id = val.id;\r\n                            this.type = val.type as SVEDataType;\r\n                            this.creation = val.creation;\r\n                            this.lastAccess = val.lastAccess;\r\n                            this.parentProject = new SVEProject(val.project.id, this.handler, (prj) => {\r\n                                onComplete(this);\r\n                            });\r\n                        });\r\n                    } else {\r\n                        this.id = -1;\r\n                        onComplete(this);\r\n                    }\r\n                };\r\n            }\r\n        } else {\r\n            if ((initInfo as SVEDataInitializer).id !== undefined) {\r\n                this.id = (initInfo as SVEDataInitializer).id!;\r\n            }\r\n            this.type = (initInfo as SVEDataInitializer).type;\r\n            this.data = (initInfo as SVEDataInitializer).data;\r\n            if((initInfo as SVEDataInitializer).path !== undefined)\r\n                this.localDataInfo = (initInfo as SVEDataInitializer).path;\r\n            this.parentProject = (initInfo as SVEDataInitializer).parentProject;\r\n            this.owner = (initInfo as SVEDataInitializer).owner;\r\n\r\n            onComplete(this);\r\n        }\r\n    }\r\n\r\n    public getID(): number {\r\n        return this.id;\r\n    }\r\n\r\n    public getOwnerID(): number {\r\n        if (typeof this.owner! === \"number\") {\r\n            return this.owner! as number;\r\n        } else {\r\n            return (this.owner! as SVEAccount).getID();\r\n        }\r\n    }\r\n\r\n    public getOwner(): Promise<SVEAccount> {\r\n        if (typeof this.owner! === \"number\") {\r\n            return new Promise<SVEAccount>((resolve, reject) => {\r\n                this.owner = new SVEAccount({id: this.owner! as number} as BasicUserInitializer, (s) => { \r\n                    resolve(this.owner! as SVEAccount);\r\n                });\r\n            });\r\n        } else {\r\n            return new Promise<SVEAccount>((resolve, reject) => resolve(this.owner! as SVEAccount));\r\n        }\r\n    }\r\n\r\n    public getCreationDate(): Date {\r\n        return this.creation;\r\n    }\r\n\r\n    public getLastAccessDate(): Date {\r\n        return this.lastAccess;\r\n    }\r\n\r\n    public getCacheType(): string {\r\n        let r = \"private\";\r\n\r\n        if (this.type === SVEDataType.PDF) {\r\n            r = \"no-store\";\r\n        }\r\n\r\n        return r;\r\n    }\r\n\r\n    public getContentType(): string {\r\n        let r = \"application/octet-stream\";\r\n\r\n        if (this.localDataInfo !== undefined) {\r\n            var path = require('path');\r\n            r = mimeMap.get((path.extname((this.currentDataVersion == SVEDataVersion.Full) ? this.localDataInfo.filePath : this.localDataInfo.thumbnailPath).slice(1) as string).toLowerCase()) as string;\r\n        } else {\r\n            if (this.type === SVEDataType.Image) {\r\n                r = \"image/png\";\r\n            }\r\n            if (this.type === SVEDataType.Video) {\r\n                r = \"video/mp4\";\r\n            }\r\n            if (this.type === SVEDataType.PDF) {\r\n                r = \"application/pdf\";\r\n            }\r\n        }\r\n\r\n        return r;\r\n    }\r\n\r\n    public getName(): string {\r\n        if (this.localDataInfo === undefined) {\r\n            return \"\";\r\n        } else {\r\n            var path = require('path');\r\n            return path.basename(this.localDataInfo.filePath);\r\n        }\r\n    }\r\n\r\n    public getType(): SVEDataType {\r\n        return this.type;\r\n    }\r\n\r\n    public getProject(): SVEProject {\r\n        return this.parentProject!;\r\n    }\r\n\r\n    public store(): Promise<boolean> {\r\n        return new Promise<boolean>((resolve, reject) => {\r\n            resolve(true);\r\n        });\r\n    }\r\n\r\n    public getURI(): string {\r\n        return SVESystemInfo.getAPIRoot() + \"/project/\" + this.parentProject!.getID() + \"/data/\" + this.id + \"/\" + (SVEDataVersion.Full == this.currentDataVersion) ? \"full\" : \"preview\";\r\n    }\r\n\r\n    public getBLOB(version: SVEDataVersion): Promise<ArrayBuffer> {\r\n        return new Promise<ArrayBuffer>((resolve, reject) => {\r\n            if(this.data === undefined || this.currentDataVersion !== version) {\r\n                this.currentDataVersion = version;\r\n                var self = this;\r\n                async () => {\r\n                    const response = await fetch(this.getURI(), {\r\n                        method: 'GET',\r\n                        headers: {\r\n                            'Accept': '*'\r\n                        }\r\n                    });\r\n                    if (response.status < 400) {\r\n                        response.arrayBuffer().then((val) => {\r\n                            self.data = val;\r\n                            resolve(self.data);\r\n                        });\r\n                    } else {\r\n                        reject(null);\r\n                    }\r\n                };\r\n                return;\r\n            }\r\n\r\n            if(this.data !== undefined) {\r\n                resolve(this.data! as ArrayBuffer);\r\n            } else {\r\n                reject(null);\r\n            }\r\n        });\r\n    }\r\n\r\n    public getStream(version: SVEDataVersion): Promise<Stream> {\r\n        return new Promise<Stream>((resolve, reject) => {\r\n            if(this.data !== undefined && this.currentDataVersion === version) {\r\n                var self = this;\r\n                (this.data! as Stream).on('error', function(err) {\r\n                    reject(null);\r\n                });\r\n                (this.data! as Stream).on('open', function() {\r\n                    resolve(self.data! as Stream);\r\n                });\r\n            } else {\r\n                reject(null);\r\n            }\r\n        });\r\n    }\r\n}","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","export * from './SVESystemInfo';\r\nexport * from './SVEAccount';\r\nexport * from './SVEProject';\r\nexport * from './SVEGroup';\r\nexport * from './SVEData';","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n"],"sourceRoot":""}